<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.5"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:py="clr-namespace:Bonsai.Scripting.Python;assembly=Bonsai.Scripting.Python"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="ResultsPath" Description="The path to the decoded results file." />
      </Expression>
      <Expression xsi:type="PropertySource" TypeArguments="io:CsvReader,sys:String">
        <MemberName>FileName</MemberName>
        <Value>../../../datasets/decoder_data/clusterless_spike_decoding_results.pkl</Value>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:ObserveOnGIL" />
      </Expression>
      <Expression xsi:type="Format">
        <Format>data=DataLoader.load(results_path="{0}")</Format>
        <Selector />
      </Expression>
      <Expression xsi:type="InputMapping">
        <PropertyMappings>
          <Property Name="Script" Selector="it" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>DecoderModule</Name>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="Module" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:Exec" />
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="SamplingFrequency" />
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>Iterate</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Period" DisplayName="SamplingFrequency" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timer">
                <rx:DueTime>PT0S</rx:DueTime>
                <rx:Period>PT0.1S</rx:Period>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:GetRuntime" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>DecoderModule</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Module" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:Exec">
                <py:Script>iterator = DataIterator(data)</py:Script>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:ObserveOnGIL" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>DecoderModule</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Module" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:Eval">
                <py:Expression>iterator.next()</py:Expression>
              </Combinator>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>it[0]</scr:Expression>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>new(it[0] as Position, it[1] as Spikes, it[2] as Predictions, it[3] as PositionBins)</scr:Expression>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="6" Label="Source1" />
            <Edge From="2" To="5" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source2" />
            <Edge From="5" To="6" Label="Source2" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="10" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source2" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="7" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source2" />
      <Edge From="7" To="9" Label="Source1" />
      <Edge From="8" To="9" Label="Source2" />
      <Edge From="9" To="10" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>