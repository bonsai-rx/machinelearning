<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:py="clr-namespace:Bonsai.Scripting.Python;assembly=Bonsai.Scripting.Python"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:drw="clr-namespace:Bonsai.Vision.Drawing;assembly=Bonsai.Vision"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns:viz="clr-namespace:Bonsai.Design.Visualizers;assembly=Bonsai.Design.Visualizers"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="GroupWorkflow">
        <Name>ZebrafishTracking</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="FileName" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:FileCapture">
                <cv:FileName>../../../../datasets/ZebrafishExampleVid.avi</cv:FileName>
                <cv:PlaybackRate>0</cv:PlaybackRate>
                <cv:StartPosition>0</cv:StartPosition>
                <cv:PositionUnits>Frames</cv:PositionUnits>
                <cv:Loop>false</cv:Loop>
                <cv:Playing>true</cv:Playing>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>Image</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:Grayscale" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:BackgroundSubtraction">
                <cv:BackgroundFrames>1</cv:BackgroundFrames>
                <cv:AdaptationRate>0</cv:AdaptationRate>
                <cv:ThresholdValue>19</cv:ThresholdValue>
                <cv:ThresholdType>Binary</cv:ThresholdType>
                <cv:SubtractionMethod>Dark</cv:SubtractionMethod>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:FindContours">
                <cv:Mode>External</cv:Mode>
                <cv:Method>ChainApproxNone</cv:Method>
                <cv:Offset>
                  <cv:X>0</cv:X>
                  <cv:Y>0</cv:Y>
                </cv:Offset>
                <cv:MinArea>10</cv:MinArea>
                <cv:MaxArea xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:LargestBinaryRegion" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Centroid</Selector>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>Centroid</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:CreateRuntime" />
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>RuntimeEngine</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>RuntimeEngine</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="Bonsai.ML.LinearDynamicalSystems:LoadLDSModule.bonsai" />
      <Expression xsi:type="SubscribeSubject">
        <Name>Centroid</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="Bonsai.ML.LinearDynamicalSystems:Kinematics.CreateObservation2D.bonsai" />
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>Observation</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Centroid</Name>
      </Expression>
      <Expression xsi:type="rx:Condition">
        <Name>TrackingStarted</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>!double.IsNaN(it.X) &amp;&amp; it.X != 0</scr:Expression>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>TrackingStarted</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>TrackingStarted</Name>
      </Expression>
      <Expression xsi:type="InputMapping">
        <PropertyMappings>
          <Property Name="Pos_x0" Selector="it.X" />
          <Property Name="Pos_y0" Selector="it.Y" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Fps" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="Bonsai.ML.LinearDynamicalSystems:Kinematics.CreateKFModel.bonsai">
        <Name>model</Name>
        <Fps>200</Fps>
        <Pos_x0>86.041664123535156</Pos_x0>
        <Pos_y0>394.625</Pos_y0>
        <Vel_x0>0</Vel_x0>
        <Vel_y0>0</Vel_y0>
        <Acc_x0>0</Acc_x0>
        <Acc_y0>0</Acc_y0>
        <Sigma_a>10000</Sigma_a>
        <Sigma_x>100</Sigma_x>
        <Sigma_y>100</Sigma_y>
        <Sqrt_diag_V0_value>0.001</Sqrt_diag_V0_value>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>ModelParameters</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Observation</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>ModelParameters</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="Bonsai.ML.LinearDynamicalSystems:Kinematics.PerformInference.bonsai">
        <Name>model</Name>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>InferredKinematics</Name>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Position</Selector>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>InferredPosition</Name>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Velocity</Selector>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>InferredVelocity</Name>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Acceleration</Selector>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>InferredAcceleration</Name>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>KinematicsVisualizer</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>InferredKinematics</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="VisualizerMapping" />
      <Expression xsi:type="GroupWorkflow">
        <Name>ImageVisualizer</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Image</Name>
            </Expression>
            <Expression xsi:type="InputMapping">
              <PropertyMappings>
                <Property Name="Size" Selector="Size" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="drw:CreateCanvas">
                <drw:Size>
                  <drw:Width>800</drw:Width>
                  <drw:Height>800</drw:Height>
                </drw:Size>
                <drw:Depth>U8</drw:Depth>
                <drw:Channels>3</drw:Channels>
                <drw:Color>
                  <drw:Val0>0</drw:Val0>
                  <drw:Val1>0</drw:Val1>
                  <drw:Val2>0</drw:Val2>
                  <drw:Val3>0</drw:Val3>
                </drw:Color>
              </Combinator>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>DrawImage</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Image</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Image" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="drw:AddImage">
                      <drw:Destination>
                        <drw:X>0</drw:X>
                        <drw:Y>0</drw:Y>
                        <drw:Width>0</drw:Width>
                        <drw:Height>0</drw:Height>
                      </drw:Destination>
                      <drw:Interpolation>Linear</drw:Interpolation>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>DrawCentroidTracking</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Centroid</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Center" Selector="X,Y" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="drw:Circle">
                      <drw:Center>
                        <drw:X>487</drw:X>
                        <drw:Y>206</drw:Y>
                      </drw:Center>
                      <drw:Radius>5</drw:Radius>
                      <drw:Color>
                        <drw:Val0>255</drw:Val0>
                        <drw:Val1>0</drw:Val1>
                        <drw:Val2>0</drw:Val2>
                        <drw:Val3>255</drw:Val3>
                      </drw:Color>
                      <drw:Thickness>-1</drw:Thickness>
                      <drw:LineType>Connected8</drw:LineType>
                      <drw:Shift>0</drw:Shift>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Centroid</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>!double.IsNaN(it.X)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Script>from System import Array
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point
output = [[]]
max_i = 1000
@returns(Array[Array[Point]])
def process(value):
  global output, max_i
  if len(output[0]) &gt; max_i:
    output[0].pop(0)
  output[0].append(value)
  return Array[Array[Point]]([Array[Point]([Point(val.X, val.Y) for val in output[0]])])</ipy:Script>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Points" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="drw:PolyLine">
                      <drw:Closed>false</drw:Closed>
                      <drw:Color>
                        <drw:Val0>255</drw:Val0>
                        <drw:Val1>0</drw:Val1>
                        <drw:Val2>0</drw:Val2>
                        <drw:Val3>255</drw:Val3>
                      </drw:Color>
                      <drw:Thickness>1</drw:Thickness>
                      <drw:LineType>Connected8</drw:LineType>
                      <drw:Shift>0</drw:Shift>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="8" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source2" />
                  <Edge From="8" To="9" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>DrawInference</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>InferredPosition</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Center" Selector="X.Mean,Y.Mean" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="drw:Circle">
                      <drw:Center>
                        <drw:X>491</drw:X>
                        <drw:Y>211</drw:Y>
                      </drw:Center>
                      <drw:Radius>5</drw:Radius>
                      <drw:Color>
                        <drw:Val0>0</drw:Val0>
                        <drw:Val1>0</drw:Val1>
                        <drw:Val2>255</drw:Val2>
                        <drw:Val3>255</drw:Val3>
                      </drw:Color>
                      <drw:Thickness>1</drw:Thickness>
                      <drw:LineType>Connected8</drw:LineType>
                      <drw:Shift>0</drw:Shift>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>InferredPosition</Name>
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Script>from System import Array
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point
output = [[]]
max_i = 1000
@returns(Array[Array[Point]])
def process(value):
  global output, max_i
  if len(output[0]) &gt; max_i:
    output[0].pop(0)
  output[0].append(value)
  return Array[Array[Point]]([Array[Point]([Point(val.X.Mean, val.Y.Mean) for val in output[0]])])</ipy:Script>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Points" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="drw:PolyLine">
                      <drw:Closed>false</drw:Closed>
                      <drw:Color>
                        <drw:Val0>0</drw:Val0>
                        <drw:Val1>0</drw:Val1>
                        <drw:Val2>255</drw:Val2>
                        <drw:Val3>255</drw:Val3>
                      </drw:Color>
                      <drw:Thickness>1</drw:Thickness>
                      <drw:LineType>Connected8</drw:LineType>
                      <drw:Shift>0</drw:Shift>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="7" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source2" />
                  <Edge From="7" To="8" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="drw:DrawCanvas" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="VisualizerMapping" />
      <Expression xsi:type="viz:TableLayoutPanelBuilder">
        <viz:Name>ZebrafishKinematicsVisualizer</viz:Name>
        <viz:ColumnCount>2</viz:ColumnCount>
        <viz:RowCount>1</viz:RowCount>
        <viz:ColumnStyles />
        <viz:RowStyles />
        <viz:CellSpans />
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="14" To="16" Label="Source1" />
      <Edge From="15" To="16" Label="Source2" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="18" To="20" Label="Source1" />
      <Edge From="19" To="20" Label="Source2" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="21" To="22" Label="Source1" />
      <Edge From="22" To="23" Label="Source1" />
      <Edge From="22" To="25" Label="Source1" />
      <Edge From="22" To="27" Label="Source1" />
      <Edge From="23" To="24" Label="Source1" />
      <Edge From="25" To="26" Label="Source1" />
      <Edge From="27" To="28" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="30" To="33" Label="Source1" />
      <Edge From="31" To="32" Label="Source1" />
      <Edge From="32" To="33" Label="Source2" />
    </Edges>
  </Workflow>
</WorkflowBuilder>